from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from src.states import DiscountStates
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext


async def cmd_change_discount(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /change_discount.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–ª–∏–µ–Ω—Ç–∞.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–ª–∏–µ–Ω—Ç–∞
    buttons = [
        InlineKeyboardButton(text="–ö–ª–∏–µ–Ω—Ç (–ë–∞–∑–æ–≤—ã–π)", callback_data="discount_2"),
        InlineKeyboardButton(text="–ö–ª–∏–µ–Ω—Ç (–°—Ä–µ–¥–Ω–∏–π)", callback_data="discount_3"),
        InlineKeyboardButton(text="–ö–ª–∏–µ–Ω—Ç (VIP)", callback_data="discount_4"),
        InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_change")  # –∏–∑–º–µ–Ω–∏–ª–∏ callback_data
    ]

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[buttons], row_width=2)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏:", reply_markup=keyboard)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–ª–∏–µ–Ω—Ç–∞
    await state.set_state(DiscountStates.waiting_for_user_type)


async def process_discount_type(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∑–∞–ø—Ä–æ—Å—É –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏.
    """
    user_type = int(callback_query.data.split("_")[1])
    await state.update_data(discount_message_id=callback_query.message.message_id)

    if user_type not in [2, 3, 4]:
        await callback_query.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    await state.update_data(user_type=user_type)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_change")  # –∏–∑–º–µ–Ω–∏–ª–∏ callback_data
    ]], row_width=1)

    await callback_query.message.edit_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.15 –¥–ª—è 15%) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –æ—Ç–º–µ–Ω—É:", reply_markup=keyboard)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–∫–∏–¥–∫–∏
    await state.set_state(DiscountStates.waiting_for_new_discount)


async def process_new_discount(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏.
    """
    try:
        new_discount = float(message.text)
        if not (0 <= new_discount <= 1):
            raise ValueError("–°–∫–∏–¥–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 0 –¥–æ 1.")

        user_data = await state.get_data()
        user_type = user_data.get('user_type')  # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –∫–ª–∏–µ–Ω—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ

        if user_type is None:
            await message.answer("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫–∏–¥–∫—É
        user_manager = message.bot.user_manager
        success = user_manager.set_discount(user_type, new_discount)

        if success:
            user_data = await state.get_data()
            message_id = user_data.get("discount_message_id")
            if message_id:
                try:
                    await message.bot.delete_message(
                        chat_id=message.chat.id,
                        message_id=message_id
                    )
                except TelegramBadRequest:
                    pass

            await message.answer(
                f"–°–∫–∏–¥–∫–∞ –¥–ª—è —Ç–∏–ø–∞ {user_manager.get_user_type_name(user_type)} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {new_discount * 100}%")
            # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
            await state.clear()
        else:
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∫–∏–¥–∫–∏.")

    except ValueError as e:
        await message.answer(f"–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")




async def cancel_change_callback_handler(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫—É.
    –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å.
    """
    if callback_query.data == "cancel_change":

        user_data = await state.get_data()
        request_message_id = user_data.get("request_message_id")

        try:
            if request_message_id:
                await callback_query.bot.edit_message_reply_markup(
                    chat_id=callback_query.message.chat.id,
                    message_id=request_message_id,
                    reply_markup=None
                )
        except TelegramBadRequest:
            pass

        await state.clear()
        await callback_query.message.edit_text("üö´ –ü—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã —Å–∫–∏–¥–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω. –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        await callback_query.answer()
